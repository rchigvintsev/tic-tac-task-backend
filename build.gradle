buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.3.1'
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.6.0'
    id 'io.freefair.lombok' version '6.3.0'
    id 'org.flywaydb.flyway' version '8.0.5'
    id 'org.sonarqube' version '3.3'
    id 'java'
    id 'jacoco'
}

ext {
    guavaVersion = '31.0.1-jre'
    r2dbcPostgresVersion = '0.8.10.RELEASE'
    r2dbcSpiVersion = '0.8.6.RELEASE'
    r2dbcPoolVersion = '0.8.7.RELEASE'
    r2dbcH2Version = '0.8.4.RELEASE'
    nettyVersion = '4.1.70.Final'
    jjwtVersion = '0.11.2'
    jaxbApiVersion = '2.3.1'
    flywayVersion = '8.0.5'
    bouncycastleVersion = '1.69'
    jodaTimeVersion = '2.10.13'
    springdocOpenapiVersion = '1.6.4'
    embeddedDatabaseSpringTestVersion = '2.1.0'
}

group = 'org.briarheart'
version = '1.1.1'
sourceCompatibility = '16'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation("org.springframework.boot:spring-boot-starter-data-r2dbc") {
        exclude group: 'io.r2dbc'
    }
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework:spring-jdbc'
    implementation "io.r2dbc:r2dbc-postgresql:$r2dbcPostgresVersion"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    implementation "joda-time:joda-time:$jodaTimeVersion"
    implementation "org.springdoc:springdoc-openapi-webflux-ui:$springdocOpenapiVersion"

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "io.r2dbc:r2dbc-spi:$r2dbcSpiVersion"
    runtimeOnly "io.r2dbc:r2dbc-pool:$r2dbcPoolVersion"
    runtimeOnly "org.flywaydb:flyway-core:$flywayVersion"
    runtimeOnly "io.netty:netty-codec-http:$nettyVersion"
    runtimeOnly "io.netty:netty-codec-http2:$nettyVersion"
    runtimeOnly "io.netty:netty-handler-proxy:$nettyVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
    runtimeOnly "javax.xml.bind:jaxb-api:$jaxbApiVersion"
    runtimeOnly "org.bouncycastle:bcprov-jdk15on:$bouncycastleVersion"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "io.zonky.test:embedded-database-spring-test:$embeddedDatabaseSpringTestVersion"

    testCompileOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

test {
    useJUnitPlatform()
}

jar {
    enabled = false
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectKey", "rchigvintsev_tic-tac-task-backend"
        property "sonar.organization", "rchigvintsev"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
